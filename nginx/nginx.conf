# Nginx Configuration for HTTPS and Backend Proxying
server {
    listen 443 ssl;
    server_name co2-api.duckdns.org;

    ssl_certificate /etc/letsencrypt/live/co2-api.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/co2-api.duckdns.org/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    location / {
        proxy_pass http://co2-backend:3000;  # Matches backend service name
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 443 ssl;
    server_name co2-app.op-bit.nz;

    ssl_certificate /etc/letsencrypt/live/co2-app.op-bit.nz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/co2-app.op-bit.nz/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    location / {
        proxy_pass http://co2-frontend:80;  # Matches frontend service name
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name co2-app.op-bit.nz;

    location / {
        return 301 https://$host$request_uri;
    }
}
